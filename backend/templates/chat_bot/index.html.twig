{# templates/botman/chat.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}GaryBot{% endblock %}

{% block body %}
  <div x-data="chatUI()" x-init="init()" class="h-full w-full flex flex-col items-center justify-center p-4">
    <div class="w-full max-w-3xl bg-white shadow-lg rounded-2xl overflow-hidden border border-gray-200">

      <div class="p-4 border-b flex items-center justify-between">
        <div class="text-xl font-semibold">🐌 GaryBot</div>
        <button x-show="hasSent" x-ref="resetBtn" @click="hideButtonAndReset"
                class="flex items-center gap-2 text-sm text-gray-700 bg-gray-100 px-3 py-1.5 rounded-full hover:bg-red-100 hover:text-red-700 transition">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2"
               viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"></path>
          </svg>
          <span>Retour au menu</span>
        </button>
      </div>

      <template x-if="!hasSent">
        <div class="p-4 border-b bg-white text-gray-600 text-sm">
          Bonjour 👋, je suis GaryBot, votre assistant pour l’entretien automobile.
          Sélectionnez une question fréquente ou posez votre propre question ci-dessous !
        </div>
      </template>

      <template x-if="!hasSent">
        <div class="p-4 space-y-4 border-t bg-gray-50">
          <h2 class="text-lg font-semibold text-gray-700">Questions fréquentes</h2>
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div @click="animateInput('Révision et entretien périodique')"
                 class="suggestion-card bg-white border hover:border-blue-400 rounded-xl p-4 shadow-sm cursor-pointer">
              <h3 class="font-medium text-gray-800">🔧 Révision et entretien</h3>
              <p class="text-sm text-gray-500 mt-1">Conseils sur les révisions constructeur, filtres, vidanges…</p>
            </div>
            <div @click="animateInput('Changement des plaquettes et disques de frein')"
                 class="suggestion-card bg-white border hover:border-blue-400 rounded-xl p-4 shadow-sm cursor-pointer">
              <h3 class="font-medium text-gray-800">🛞 Freins</h3>
              <p class="text-sm text-gray-500 mt-1">Infos sur plaquettes, disques, durée de vie, symptômes d’usure.</p>
            </div>
            <div @click="animateInput('Contrôle et recharge de la climatisation')"
                 class="suggestion-card bg-white border hover:border-blue-400 rounded-xl p-4 shadow-sm cursor-pointer">
              <h3 class="font-medium text-gray-800">❄️ Climatisation</h3>
              <p class="text-sm text-gray-500 mt-1">Quand faire la recharge ? Contrôle d’étanchéité ?</p>
            </div>
            <div @click="animateInput('Remplacement de la batterie')"
                 class="suggestion-card bg-white border hover:border-blue-400 rounded-xl p-4 shadow-sm cursor-pointer">
              <h3 class="font-medium text-gray-800">🔋 Batterie</h3>
              <p class="text-sm text-gray-500 mt-1">Signes de faiblesse, durée de vie, type adapté.</p>
            </div>
          </div>
        </div>
      </template>

      <div x-show="hasSent" id="chatbot-messages"
           class="p-4 h-80 overflow-y-auto space-y-2 flex flex-col"></div>

      <div class="border-t p-4 flex gap-2">
        <input x-ref="userInput" x-model="userMessage" type="text"
               placeholder="Posez votre question…"
               class="flex-1 border rounded-lg p-2 focus:outline-none focus:ring" />
        <button @click="sendMessage"
                class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
          Envoyer
        </button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js" defer></script>
  <script>
    function chatUI() {
      return {
        userMessage: '',
        hasSent: false,

        init() {
          gsap.from(".suggestion-card", {
            opacity: 0, y: 30, stagger: 0.1, duration: 0.4, ease: "power2.out"
          });
        },

        animateInput(text) {
          this.userMessage = '';
          let i = 0;
          const interval = setInterval(() => {
            this.userMessage += text[i++];
            if (i >= text.length) clearInterval(interval);
          }, 20);
          this.$refs.userInput.focus();
        },

        sendMessage() {
          if (!this.userMessage.trim()) return;
          this.hasSent = true;
          const chatbox = document.getElementById('chatbot-messages');

          // Affiche le message de l'utilisateur
          const msgEl = document.createElement('div');
          msgEl.className = 'bg-blue-100 p-2 rounded-xl max-w-sm self-end';
          msgEl.innerText = this.userMessage;
          chatbox.appendChild(msgEl);

          const messageText = this.userMessage;
          this.userMessage = '';
          chatbox.scrollTop = chatbox.scrollHeight;

          // Envoi vers Symfony
          fetch('/botman', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ message: messageText })
          })
          .then(res => res.ok ? res.json() : Promise.reject(res.statusText))
          .then(data => {
            const botEl = document.createElement('div');
            botEl.className = 'bg-gray-100 p-2 rounded-xl max-w-sm self-start';
            botEl.innerText = `GaryBot : ${data.reply}`;
            chatbox.appendChild(botEl);
            chatbox.scrollTop = chatbox.scrollHeight;
          })
          .catch(() => {
            const errEl = document.createElement('div');
            errEl.className = 'bg-red-100 p-2 rounded-xl max-w-sm self-start text-red-700';
            errEl.innerText = 'Erreur de communication avec GaryBot.';
            chatbox.appendChild(errEl);
            chatbox.scrollTop = chatbox.scrollHeight;
          });
        },

        hideButtonAndReset() {
          this.$refs.resetBtn.style.display = 'none';
          this.resetChat();
        },

        resetChat() {
          this.hasSent = false;
          this.userMessage = '';
          document.getElementById('chatbot-messages').innerHTML = '';
          this.$refs.userInput.focus();
        }
      }
    }
  </script>
{% endblock %}
